{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.js","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","type","checked","onChange","TodoList","todos","map","KEY","App","todoTaskRef","useRef","useState","setTodos","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","placeholder","onClick","event","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"4KAEO,SAASA,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACvBC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAMlB,OACE,+BACE,uBAAOC,KAAK,WAAWC,QAASF,EAAWG,SANvB,WACtBN,EAAWC,MAMRC,KCTA,SAASK,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WAChC,OACE,6BACGQ,EAAMC,KAAI,SAACV,GAAD,OACT,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKE,SCH5B,IAAMS,EAAM,gBAEL,SAASC,IACd,IAAMC,EAAcC,mBACpB,EAA0BC,mBAAS,CACjC,CAAEb,GAAI,EAAGC,KAAM,SAAUC,WAAW,KADtC,mBAAOK,EAAP,KAAcO,EAAd,KAIAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GACFF,EAASE,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUf,MACxC,CAACA,IAyBJ,OACE,eAAC,WAAD,WACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAzBT,SAACC,GAClB,IAAMuB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAC1B,GAAD,OAAUA,EAAKE,KAAOA,KACjDF,EAAKI,WAAaJ,EAAKI,UACvBY,EAASS,MAsBP,uBAAOE,IAAKd,EAAaR,KAAK,OAAOuB,YAAY,gBACjD,wBAAQC,QApBU,SAACC,GACrB,IAAM3B,EAAOU,EAAYkB,QAAQC,MACpB,KAAT7B,IAEJa,GAAS,SAACiB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE/B,GAAIgC,cAAU/B,OAAMC,WAAW,QAGzDS,EAAYkB,QAAQC,MAAQ,OAY1B,uBACA,wBAAQH,QAVW,WACrB,IAAMJ,EAAWhB,EAAM0B,QAAO,SAACnC,GAAD,OAAWA,EAAKI,aAC9CY,EAASS,IAQP,sBACA,6CACahB,EAAM0B,QAAO,SAACnC,GAAD,OAAWA,EAAKI,aAAWgC,OADrD,6BChDNC,IAASC,OAAO,cAAC1B,EAAD,IAAS2B,SAASC,eAAe,W","file":"static/js/main.f1ebc1df.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function TodoItem({ todo, toggleTodo }) {\n  const { id, task, completed } = todo;\n\n  const handleTodoClick = () => {\n    toggleTodo(id);\n  };\n\n  return (\n    <li>\n      <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} />\n      {task}\n    </li>\n  );\n}\n","import React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport function TodoList({ todos, toggleTodo }) {\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} />\n      ))}\n    </ul>\n  );\n}\n","import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoList } from \"./components/TodoList\";\n\nconst KEY = \"todoApp.todos\";\n\nexport function App() {\n  const todoTaskRef = useRef();\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Tarea \", completed: false },\n  ]);\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = (event) => {\n    const task = todoTaskRef.current.value;\n    if (task === \"\") return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), task, completed: false }];\n    });\n\n    todoTaskRef.current.value = null;\n  };\n\n  const handleClearAll = () => {\n    const newTodos = todos.filter((todo) => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return (\n    <Fragment>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva tarea\" />\n      <button onClick={handleTodoAdd}>AÃ±adir</button>\n      <button onClick={handleClearAll}>Eliminar</button>\n      <div>\n        Te quedan {todos.filter((todo) => !todo.completed).length} tareas por\n        terminar\n      </div>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}